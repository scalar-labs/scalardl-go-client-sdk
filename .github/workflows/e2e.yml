name: End-to-end Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  smallbank-benchmark-without-auditor:
    runs-on: ubuntu-latest
    steps:
    - name: Check out Source Code
      uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17

    - name: Build SmallBank Benchmark Application
      working-directory: e2e/smallbank_benchmark
      run: go build

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.CR_PAT }}

    - name: Start up a Local Scalar DL Network
      working-directory: .github
      run: |
        git init
        git pull https://${{ github.repository_owner }}:${{ secrets.CR_PAT }}@github.com/scalar-labs/scalardl-samples.git 3.3
        docker-compose -f docker-compose.yml up -d cassandra
        echo -n "Wait for C* "
        until docker exec scalardl-samples-cassandra-1 cqlsh 2> /dev/null ; do
          sleep 0.5
          echo -n "#"
        done
        echo ""
        docker-compose -f docker-compose.yml up scalardl-ledger-schema-loader-cassandra
        docker-compose -f docker-compose.yml up -d scalar-ledger ledger-envoy

    - name: Run the SmallBank Benchmark Application
      working-directory: e2e/smallbank_benchmark
      run: |
        ./smallbank_benchmark \
          -properties ../scalardl.properties \
          -num-concurrencies 2 \
          -duration 30 \
          -num-accounts 100 \
          -ramp-up-time 0

  smallbank-benchmark-with-auditor:
    runs-on: ubuntu-latest
    steps:
    - name: Check out Source Code
      uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17

    - name: Build the SmallBank Benchmark Application
      working-directory: e2e/smallbank_benchmark
      run: go build

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.CR_PAT }}

    - name: Start up a Local Scalar DL Network (with Auditor)
      working-directory: .github
      run: |
        git init
        git pull https://${{ github.repository_owner }}:${{ secrets.CR_PAT }}@github.com/scalar-labs/scalardl-samples.git 3.3
        docker-compose -f docker-compose.yml -f docker-compose-auditor.yml up -d cassandra
        echo -n "Wait for C* "
        until docker exec scalardl-samples-cassandra-1 cqlsh 2> /dev/null ; do
          sleep 0.5
          echo -n "#"
        done
        echo ""
        docker-compose -f docker-compose.yml -f docker-compose-auditor.yml up scalardl-ledger-schema-loader-cassandra
        docker-compose -f docker-compose.yml -f docker-compose-auditor.yml up scalardl-auditor-schema-loader-cassandra
        docker-compose -f docker-compose.yml -f docker-compose-auditor.yml up -d scalar-ledger
        docker-compose -f docker-compose.yml -f docker-compose-auditor.yml up -d scalar-auditor
        docker-compose -f docker-compose.yml -f docker-compose-auditor.yml up -d ledger-envoy
        docker-compose -f docker-compose.yml -f docker-compose-auditor.yml up -d auditor-envoy
        docker-compose -f docker-compose.yml -f docker-compose-auditor.yml up -d scalar-ledger-as-client
        docker-compose -f docker-compose.yml -f docker-compose-auditor.yml up -d scalar-audior-as-client
        sleep 5
        docker restart scalardl-samples-scalar-ledger-1 # just in case
        docker restart scalardl-samples-scalar-auditor-1 # just in case
        sleep 5

    - name: Run the SmallBank Benchmark Application
      working-directory: e2e/smallbank_benchmark
      run: |
        ./smallbank_benchmark \
          -properties ../scalardl.auditor-enabled.properties \
          -num-concurrencies 2 \
          -duration 30 \
          -num-accounts 100 \
          -ramp-up-time 0

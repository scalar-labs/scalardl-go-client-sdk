// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: scalar.proto

package rpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TransactionState int32

const (
	TransactionState_TRANSACTION_STATE_UNSPECIFIED TransactionState = 0
	TransactionState_TRANSACTION_STATE_COMMITTED   TransactionState = 1
	TransactionState_TRANSACTION_STATE_ABORTED     TransactionState = 2
	TransactionState_TRANSACTION_STATE_UNKNOWN     TransactionState = 3
)

// Enum value maps for TransactionState.
var (
	TransactionState_name = map[int32]string{
		0: "TRANSACTION_STATE_UNSPECIFIED",
		1: "TRANSACTION_STATE_COMMITTED",
		2: "TRANSACTION_STATE_ABORTED",
		3: "TRANSACTION_STATE_UNKNOWN",
	}
	TransactionState_value = map[string]int32{
		"TRANSACTION_STATE_UNSPECIFIED": 0,
		"TRANSACTION_STATE_COMMITTED":   1,
		"TRANSACTION_STATE_ABORTED":     2,
		"TRANSACTION_STATE_UNKNOWN":     3,
	}
)

func (x TransactionState) Enum() *TransactionState {
	p := new(TransactionState)
	*p = x
	return p
}

func (x TransactionState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TransactionState) Descriptor() protoreflect.EnumDescriptor {
	return file_scalar_proto_enumTypes[0].Descriptor()
}

func (TransactionState) Type() protoreflect.EnumType {
	return &file_scalar_proto_enumTypes[0]
}

func (x TransactionState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TransactionState.Descriptor instead.
func (TransactionState) EnumDescriptor() ([]byte, []int) {
	return file_scalar_proto_rawDescGZIP(), []int{0}
}

type CertificateRegistrationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CertHolderId string `protobuf:"bytes,1,opt,name=cert_holder_id,json=certHolderId,proto3" json:"cert_holder_id,omitempty"`
	CertVersion  uint32 `protobuf:"varint,2,opt,name=cert_version,json=certVersion,proto3" json:"cert_version,omitempty"`
	CertPem      string `protobuf:"bytes,3,opt,name=cert_pem,json=certPem,proto3" json:"cert_pem,omitempty"`
	ViaProxy     bool   `protobuf:"varint,4,opt,name=via_proxy,json=viaProxy,proto3" json:"via_proxy,omitempty"`
}

func (x *CertificateRegistrationRequest) Reset() {
	*x = CertificateRegistrationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scalar_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CertificateRegistrationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CertificateRegistrationRequest) ProtoMessage() {}

func (x *CertificateRegistrationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_scalar_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CertificateRegistrationRequest.ProtoReflect.Descriptor instead.
func (*CertificateRegistrationRequest) Descriptor() ([]byte, []int) {
	return file_scalar_proto_rawDescGZIP(), []int{0}
}

func (x *CertificateRegistrationRequest) GetCertHolderId() string {
	if x != nil {
		return x.CertHolderId
	}
	return ""
}

func (x *CertificateRegistrationRequest) GetCertVersion() uint32 {
	if x != nil {
		return x.CertVersion
	}
	return 0
}

func (x *CertificateRegistrationRequest) GetCertPem() string {
	if x != nil {
		return x.CertPem
	}
	return ""
}

func (x *CertificateRegistrationRequest) GetViaProxy() bool {
	if x != nil {
		return x.ViaProxy
	}
	return false
}

type FunctionRegistrationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FunctionId         string `protobuf:"bytes,1,opt,name=function_id,json=functionId,proto3" json:"function_id,omitempty"`
	FunctionBinaryName string `protobuf:"bytes,2,opt,name=function_binary_name,json=functionBinaryName,proto3" json:"function_binary_name,omitempty"`
	FunctionByteCode   []byte `protobuf:"bytes,3,opt,name=function_byte_code,json=functionByteCode,proto3" json:"function_byte_code,omitempty"`
	ViaProxy           bool   `protobuf:"varint,4,opt,name=via_proxy,json=viaProxy,proto3" json:"via_proxy,omitempty"`
}

func (x *FunctionRegistrationRequest) Reset() {
	*x = FunctionRegistrationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scalar_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FunctionRegistrationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FunctionRegistrationRequest) ProtoMessage() {}

func (x *FunctionRegistrationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_scalar_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FunctionRegistrationRequest.ProtoReflect.Descriptor instead.
func (*FunctionRegistrationRequest) Descriptor() ([]byte, []int) {
	return file_scalar_proto_rawDescGZIP(), []int{1}
}

func (x *FunctionRegistrationRequest) GetFunctionId() string {
	if x != nil {
		return x.FunctionId
	}
	return ""
}

func (x *FunctionRegistrationRequest) GetFunctionBinaryName() string {
	if x != nil {
		return x.FunctionBinaryName
	}
	return ""
}

func (x *FunctionRegistrationRequest) GetFunctionByteCode() []byte {
	if x != nil {
		return x.FunctionByteCode
	}
	return nil
}

func (x *FunctionRegistrationRequest) GetViaProxy() bool {
	if x != nil {
		return x.ViaProxy
	}
	return false
}

type ContractRegistrationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContractId         string `protobuf:"bytes,1,opt,name=contract_id,json=contractId,proto3" json:"contract_id,omitempty"`
	ContractBinaryName string `protobuf:"bytes,2,opt,name=contract_binary_name,json=contractBinaryName,proto3" json:"contract_binary_name,omitempty"`
	ContractByteCode   []byte `protobuf:"bytes,3,opt,name=contract_byte_code,json=contractByteCode,proto3" json:"contract_byte_code,omitempty"`
	ContractProperties string `protobuf:"bytes,4,opt,name=contract_properties,json=contractProperties,proto3" json:"contract_properties,omitempty"`
	CertHolderId       string `protobuf:"bytes,5,opt,name=cert_holder_id,json=certHolderId,proto3" json:"cert_holder_id,omitempty"`
	CertVersion        uint32 `protobuf:"varint,6,opt,name=cert_version,json=certVersion,proto3" json:"cert_version,omitempty"`
	Signature          []byte `protobuf:"bytes,7,opt,name=signature,proto3" json:"signature,omitempty"`
	ViaProxy           bool   `protobuf:"varint,8,opt,name=via_proxy,json=viaProxy,proto3" json:"via_proxy,omitempty"`
}

func (x *ContractRegistrationRequest) Reset() {
	*x = ContractRegistrationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scalar_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContractRegistrationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContractRegistrationRequest) ProtoMessage() {}

func (x *ContractRegistrationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_scalar_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContractRegistrationRequest.ProtoReflect.Descriptor instead.
func (*ContractRegistrationRequest) Descriptor() ([]byte, []int) {
	return file_scalar_proto_rawDescGZIP(), []int{2}
}

func (x *ContractRegistrationRequest) GetContractId() string {
	if x != nil {
		return x.ContractId
	}
	return ""
}

func (x *ContractRegistrationRequest) GetContractBinaryName() string {
	if x != nil {
		return x.ContractBinaryName
	}
	return ""
}

func (x *ContractRegistrationRequest) GetContractByteCode() []byte {
	if x != nil {
		return x.ContractByteCode
	}
	return nil
}

func (x *ContractRegistrationRequest) GetContractProperties() string {
	if x != nil {
		return x.ContractProperties
	}
	return ""
}

func (x *ContractRegistrationRequest) GetCertHolderId() string {
	if x != nil {
		return x.CertHolderId
	}
	return ""
}

func (x *ContractRegistrationRequest) GetCertVersion() uint32 {
	if x != nil {
		return x.CertVersion
	}
	return 0
}

func (x *ContractRegistrationRequest) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *ContractRegistrationRequest) GetViaProxy() bool {
	if x != nil {
		return x.ViaProxy
	}
	return false
}

type ContractsListingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CertHolderId string `protobuf:"bytes,1,opt,name=cert_holder_id,json=certHolderId,proto3" json:"cert_holder_id,omitempty"`
	CertVersion  uint32 `protobuf:"varint,2,opt,name=cert_version,json=certVersion,proto3" json:"cert_version,omitempty"`
	ContractId   string `protobuf:"bytes,3,opt,name=contract_id,json=contractId,proto3" json:"contract_id,omitempty"`
	Signature    []byte `protobuf:"bytes,4,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *ContractsListingRequest) Reset() {
	*x = ContractsListingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scalar_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContractsListingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContractsListingRequest) ProtoMessage() {}

func (x *ContractsListingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_scalar_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContractsListingRequest.ProtoReflect.Descriptor instead.
func (*ContractsListingRequest) Descriptor() ([]byte, []int) {
	return file_scalar_proto_rawDescGZIP(), []int{3}
}

func (x *ContractsListingRequest) GetCertHolderId() string {
	if x != nil {
		return x.CertHolderId
	}
	return ""
}

func (x *ContractsListingRequest) GetCertVersion() uint32 {
	if x != nil {
		return x.CertVersion
	}
	return 0
}

func (x *ContractsListingRequest) GetContractId() string {
	if x != nil {
		return x.ContractId
	}
	return ""
}

func (x *ContractsListingRequest) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type ContractExecutionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContractId       string   `protobuf:"bytes,1,opt,name=contract_id,json=contractId,proto3" json:"contract_id,omitempty"`
	ContractArgument string   `protobuf:"bytes,2,opt,name=contract_argument,json=contractArgument,proto3" json:"contract_argument,omitempty"`
	CertHolderId     string   `protobuf:"bytes,3,opt,name=cert_holder_id,json=certHolderId,proto3" json:"cert_holder_id,omitempty"`
	CertVersion      uint32   `protobuf:"varint,4,opt,name=cert_version,json=certVersion,proto3" json:"cert_version,omitempty"`
	FunctionArgument string   `protobuf:"bytes,5,opt,name=function_argument,json=functionArgument,proto3" json:"function_argument,omitempty"`
	Signature        []byte   `protobuf:"bytes,6,opt,name=signature,proto3" json:"signature,omitempty"`
	AuditorSignature []byte   `protobuf:"bytes,7,opt,name=auditor_signature,json=auditorSignature,proto3" json:"auditor_signature,omitempty"`
	PreExecution     bool     `protobuf:"varint,8,opt,name=pre_execution,json=preExecution,proto3" json:"pre_execution,omitempty"`
	OrderingKeys     []string `protobuf:"bytes,9,rep,name=ordering_keys,json=orderingKeys,proto3" json:"ordering_keys,omitempty"`
}

func (x *ContractExecutionRequest) Reset() {
	*x = ContractExecutionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scalar_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContractExecutionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContractExecutionRequest) ProtoMessage() {}

func (x *ContractExecutionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_scalar_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContractExecutionRequest.ProtoReflect.Descriptor instead.
func (*ContractExecutionRequest) Descriptor() ([]byte, []int) {
	return file_scalar_proto_rawDescGZIP(), []int{4}
}

func (x *ContractExecutionRequest) GetContractId() string {
	if x != nil {
		return x.ContractId
	}
	return ""
}

func (x *ContractExecutionRequest) GetContractArgument() string {
	if x != nil {
		return x.ContractArgument
	}
	return ""
}

func (x *ContractExecutionRequest) GetCertHolderId() string {
	if x != nil {
		return x.CertHolderId
	}
	return ""
}

func (x *ContractExecutionRequest) GetCertVersion() uint32 {
	if x != nil {
		return x.CertVersion
	}
	return 0
}

func (x *ContractExecutionRequest) GetFunctionArgument() string {
	if x != nil {
		return x.FunctionArgument
	}
	return ""
}

func (x *ContractExecutionRequest) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *ContractExecutionRequest) GetAuditorSignature() []byte {
	if x != nil {
		return x.AuditorSignature
	}
	return nil
}

func (x *ContractExecutionRequest) GetPreExecution() bool {
	if x != nil {
		return x.PreExecution
	}
	return false
}

func (x *ContractExecutionRequest) GetOrderingKeys() []string {
	if x != nil {
		return x.OrderingKeys
	}
	return nil
}

type LedgerValidationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssetId      string `protobuf:"bytes,1,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"`
	StartAge     uint32 `protobuf:"varint,2,opt,name=start_age,json=startAge,proto3" json:"start_age,omitempty"`
	EndAge       uint32 `protobuf:"varint,3,opt,name=end_age,json=endAge,proto3" json:"end_age,omitempty"`
	CertHolderId string `protobuf:"bytes,4,opt,name=cert_holder_id,json=certHolderId,proto3" json:"cert_holder_id,omitempty"`
	CertVersion  uint32 `protobuf:"varint,5,opt,name=cert_version,json=certVersion,proto3" json:"cert_version,omitempty"`
	Signature    []byte `protobuf:"bytes,6,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *LedgerValidationRequest) Reset() {
	*x = LedgerValidationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scalar_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LedgerValidationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LedgerValidationRequest) ProtoMessage() {}

func (x *LedgerValidationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_scalar_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LedgerValidationRequest.ProtoReflect.Descriptor instead.
func (*LedgerValidationRequest) Descriptor() ([]byte, []int) {
	return file_scalar_proto_rawDescGZIP(), []int{5}
}

func (x *LedgerValidationRequest) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

func (x *LedgerValidationRequest) GetStartAge() uint32 {
	if x != nil {
		return x.StartAge
	}
	return 0
}

func (x *LedgerValidationRequest) GetEndAge() uint32 {
	if x != nil {
		return x.EndAge
	}
	return 0
}

func (x *LedgerValidationRequest) GetCertHolderId() string {
	if x != nil {
		return x.CertHolderId
	}
	return ""
}

func (x *LedgerValidationRequest) GetCertVersion() uint32 {
	if x != nil {
		return x.CertVersion
	}
	return 0
}

func (x *LedgerValidationRequest) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type AssetProofRetrievalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssetId      string `protobuf:"bytes,1,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"`
	Age          int32  `protobuf:"varint,2,opt,name=age,proto3" json:"age,omitempty"`
	CertHolderId string `protobuf:"bytes,3,opt,name=cert_holder_id,json=certHolderId,proto3" json:"cert_holder_id,omitempty"`
	CertVersion  uint32 `protobuf:"varint,4,opt,name=cert_version,json=certVersion,proto3" json:"cert_version,omitempty"`
	Signature    []byte `protobuf:"bytes,5,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *AssetProofRetrievalRequest) Reset() {
	*x = AssetProofRetrievalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scalar_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetProofRetrievalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetProofRetrievalRequest) ProtoMessage() {}

func (x *AssetProofRetrievalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_scalar_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetProofRetrievalRequest.ProtoReflect.Descriptor instead.
func (*AssetProofRetrievalRequest) Descriptor() ([]byte, []int) {
	return file_scalar_proto_rawDescGZIP(), []int{6}
}

func (x *AssetProofRetrievalRequest) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

func (x *AssetProofRetrievalRequest) GetAge() int32 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *AssetProofRetrievalRequest) GetCertHolderId() string {
	if x != nil {
		return x.CertHolderId
	}
	return ""
}

func (x *AssetProofRetrievalRequest) GetCertVersion() uint32 {
	if x != nil {
		return x.CertVersion
	}
	return 0
}

func (x *AssetProofRetrievalRequest) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type ExecutionAbortRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce        string `protobuf:"bytes,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	CertHolderId string `protobuf:"bytes,2,opt,name=cert_holder_id,json=certHolderId,proto3" json:"cert_holder_id,omitempty"`
	CertVersion  uint32 `protobuf:"varint,3,opt,name=cert_version,json=certVersion,proto3" json:"cert_version,omitempty"`
	Signature    []byte `protobuf:"bytes,4,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *ExecutionAbortRequest) Reset() {
	*x = ExecutionAbortRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scalar_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecutionAbortRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutionAbortRequest) ProtoMessage() {}

func (x *ExecutionAbortRequest) ProtoReflect() protoreflect.Message {
	mi := &file_scalar_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutionAbortRequest.ProtoReflect.Descriptor instead.
func (*ExecutionAbortRequest) Descriptor() ([]byte, []int) {
	return file_scalar_proto_rawDescGZIP(), []int{7}
}

func (x *ExecutionAbortRequest) GetNonce() string {
	if x != nil {
		return x.Nonce
	}
	return ""
}

func (x *ExecutionAbortRequest) GetCertHolderId() string {
	if x != nil {
		return x.CertHolderId
	}
	return ""
}

func (x *ExecutionAbortRequest) GetCertVersion() uint32 {
	if x != nil {
		return x.CertVersion
	}
	return 0
}

func (x *ExecutionAbortRequest) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type StateRetrievalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionId string `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
}

func (x *StateRetrievalRequest) Reset() {
	*x = StateRetrievalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scalar_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateRetrievalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateRetrievalRequest) ProtoMessage() {}

func (x *StateRetrievalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_scalar_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateRetrievalRequest.ProtoReflect.Descriptor instead.
func (*StateRetrievalRequest) Descriptor() ([]byte, []int) {
	return file_scalar_proto_rawDescGZIP(), []int{8}
}

func (x *StateRetrievalRequest) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

type ExecutionValidationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Request *ContractExecutionRequest `protobuf:"bytes,1,opt,name=request,proto3" json:"request,omitempty"`
	Proofs  []*AssetProof             `protobuf:"bytes,2,rep,name=proofs,proto3" json:"proofs,omitempty"`
}

func (x *ExecutionValidationRequest) Reset() {
	*x = ExecutionValidationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scalar_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecutionValidationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutionValidationRequest) ProtoMessage() {}

func (x *ExecutionValidationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_scalar_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutionValidationRequest.ProtoReflect.Descriptor instead.
func (*ExecutionValidationRequest) Descriptor() ([]byte, []int) {
	return file_scalar_proto_rawDescGZIP(), []int{9}
}

func (x *ExecutionValidationRequest) GetRequest() *ContractExecutionRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *ExecutionValidationRequest) GetProofs() []*AssetProof {
	if x != nil {
		return x.Proofs
	}
	return nil
}

type ContractsListingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Json string `protobuf:"bytes,1,opt,name=json,proto3" json:"json,omitempty"`
}

func (x *ContractsListingResponse) Reset() {
	*x = ContractsListingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scalar_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContractsListingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContractsListingResponse) ProtoMessage() {}

func (x *ContractsListingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_scalar_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContractsListingResponse.ProtoReflect.Descriptor instead.
func (*ContractsListingResponse) Descriptor() ([]byte, []int) {
	return file_scalar_proto_rawDescGZIP(), []int{10}
}

func (x *ContractsListingResponse) GetJson() string {
	if x != nil {
		return x.Json
	}
	return ""
}

type ContractExecutionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string        `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"` // a result of contract execution
	Proofs []*AssetProof `protobuf:"bytes,2,rep,name=proofs,proto3" json:"proofs,omitempty"` // proofs given from the ledger server
}

func (x *ContractExecutionResponse) Reset() {
	*x = ContractExecutionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scalar_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContractExecutionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContractExecutionResponse) ProtoMessage() {}

func (x *ContractExecutionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_scalar_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContractExecutionResponse.ProtoReflect.Descriptor instead.
func (*ContractExecutionResponse) Descriptor() ([]byte, []int) {
	return file_scalar_proto_rawDescGZIP(), []int{11}
}

func (x *ContractExecutionResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

func (x *ContractExecutionResponse) GetProofs() []*AssetProof {
	if x != nil {
		return x.Proofs
	}
	return nil
}

type LedgerValidationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode uint32      `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`
	Proof      *AssetProof `protobuf:"bytes,2,opt,name=proof,proto3" json:"proof,omitempty"` // a proof given from the ledger server
}

func (x *LedgerValidationResponse) Reset() {
	*x = LedgerValidationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scalar_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LedgerValidationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LedgerValidationResponse) ProtoMessage() {}

func (x *LedgerValidationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_scalar_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LedgerValidationResponse.ProtoReflect.Descriptor instead.
func (*LedgerValidationResponse) Descriptor() ([]byte, []int) {
	return file_scalar_proto_rawDescGZIP(), []int{12}
}

func (x *LedgerValidationResponse) GetStatusCode() uint32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *LedgerValidationResponse) GetProof() *AssetProof {
	if x != nil {
		return x.Proof
	}
	return nil
}

type AssetProofRetrievalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Proof      *AssetProof `protobuf:"bytes,1,opt,name=proof,proto3" json:"proof,omitempty"`
	LedgerName string      `protobuf:"bytes,2,opt,name=ledger_name,json=ledgerName,proto3" json:"ledger_name,omitempty"`
}

func (x *AssetProofRetrievalResponse) Reset() {
	*x = AssetProofRetrievalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scalar_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetProofRetrievalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetProofRetrievalResponse) ProtoMessage() {}

func (x *AssetProofRetrievalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_scalar_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetProofRetrievalResponse.ProtoReflect.Descriptor instead.
func (*AssetProofRetrievalResponse) Descriptor() ([]byte, []int) {
	return file_scalar_proto_rawDescGZIP(), []int{13}
}

func (x *AssetProofRetrievalResponse) GetProof() *AssetProof {
	if x != nil {
		return x.Proof
	}
	return nil
}

func (x *AssetProofRetrievalResponse) GetLedgerName() string {
	if x != nil {
		return x.LedgerName
	}
	return ""
}

type AssetProof struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssetId   string `protobuf:"bytes,1,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"`
	Age       uint32 `protobuf:"varint,2,opt,name=age,proto3" json:"age,omitempty"`
	Nonce     string `protobuf:"bytes,3,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Input     string `protobuf:"bytes,4,opt,name=input,proto3" json:"input,omitempty"`
	Hash      []byte `protobuf:"bytes,5,opt,name=hash,proto3" json:"hash,omitempty"`
	PrevHash  []byte `protobuf:"bytes,6,opt,name=prev_hash,json=prevHash,proto3" json:"prev_hash,omitempty"`
	Signature []byte `protobuf:"bytes,7,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *AssetProof) Reset() {
	*x = AssetProof{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scalar_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetProof) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetProof) ProtoMessage() {}

func (x *AssetProof) ProtoReflect() protoreflect.Message {
	mi := &file_scalar_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetProof.ProtoReflect.Descriptor instead.
func (*AssetProof) Descriptor() ([]byte, []int) {
	return file_scalar_proto_rawDescGZIP(), []int{14}
}

func (x *AssetProof) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

func (x *AssetProof) GetAge() uint32 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *AssetProof) GetNonce() string {
	if x != nil {
		return x.Nonce
	}
	return ""
}

func (x *AssetProof) GetInput() string {
	if x != nil {
		return x.Input
	}
	return ""
}

func (x *AssetProof) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

func (x *AssetProof) GetPrevHash() []byte {
	if x != nil {
		return x.PrevHash
	}
	return nil
}

func (x *AssetProof) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type ExecutionAbortResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State TransactionState `protobuf:"varint,1,opt,name=state,proto3,enum=rpc.TransactionState" json:"state,omitempty"`
}

func (x *ExecutionAbortResponse) Reset() {
	*x = ExecutionAbortResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scalar_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecutionAbortResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutionAbortResponse) ProtoMessage() {}

func (x *ExecutionAbortResponse) ProtoReflect() protoreflect.Message {
	mi := &file_scalar_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutionAbortResponse.ProtoReflect.Descriptor instead.
func (*ExecutionAbortResponse) Descriptor() ([]byte, []int) {
	return file_scalar_proto_rawDescGZIP(), []int{15}
}

func (x *ExecutionAbortResponse) GetState() TransactionState {
	if x != nil {
		return x.State
	}
	return TransactionState_TRANSACTION_STATE_UNSPECIFIED
}

type StateRetrievalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State TransactionState `protobuf:"varint,1,opt,name=state,proto3,enum=rpc.TransactionState" json:"state,omitempty"`
}

func (x *StateRetrievalResponse) Reset() {
	*x = StateRetrievalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scalar_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateRetrievalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateRetrievalResponse) ProtoMessage() {}

func (x *StateRetrievalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_scalar_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateRetrievalResponse.ProtoReflect.Descriptor instead.
func (*StateRetrievalResponse) Descriptor() ([]byte, []int) {
	return file_scalar_proto_rawDescGZIP(), []int{16}
}

func (x *StateRetrievalResponse) GetState() TransactionState {
	if x != nil {
		return x.State
	}
	return TransactionState_TRANSACTION_STATE_UNSPECIFIED
}

type Status struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    uint32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *Status) Reset() {
	*x = Status{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scalar_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Status) ProtoMessage() {}

func (x *Status) ProtoReflect() protoreflect.Message {
	mi := &file_scalar_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Status.ProtoReflect.Descriptor instead.
func (*Status) Descriptor() ([]byte, []int) {
	return file_scalar_proto_rawDescGZIP(), []int{17}
}

func (x *Status) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *Status) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ExecutionOrderingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature []byte `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *ExecutionOrderingResponse) Reset() {
	*x = ExecutionOrderingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scalar_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecutionOrderingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutionOrderingResponse) ProtoMessage() {}

func (x *ExecutionOrderingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_scalar_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutionOrderingResponse.ProtoReflect.Descriptor instead.
func (*ExecutionOrderingResponse) Descriptor() ([]byte, []int) {
	return file_scalar_proto_rawDescGZIP(), []int{18}
}

func (x *ExecutionOrderingResponse) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type ProofsRegistrationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Proofs []*AssetProof `protobuf:"bytes,1,rep,name=proofs,proto3" json:"proofs,omitempty"`
}

func (x *ProofsRegistrationRequest) Reset() {
	*x = ProofsRegistrationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scalar_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProofsRegistrationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProofsRegistrationRequest) ProtoMessage() {}

func (x *ProofsRegistrationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_scalar_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProofsRegistrationRequest.ProtoReflect.Descriptor instead.
func (*ProofsRegistrationRequest) Descriptor() ([]byte, []int) {
	return file_scalar_proto_rawDescGZIP(), []int{19}
}

func (x *ProofsRegistrationRequest) GetProofs() []*AssetProof {
	if x != nil {
		return x.Proofs
	}
	return nil
}

type ProofRetrievalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssetId string `protobuf:"bytes,1,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"`
}

func (x *ProofRetrievalRequest) Reset() {
	*x = ProofRetrievalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scalar_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProofRetrievalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProofRetrievalRequest) ProtoMessage() {}

func (x *ProofRetrievalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_scalar_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProofRetrievalRequest.ProtoReflect.Descriptor instead.
func (*ProofRetrievalRequest) Descriptor() ([]byte, []int) {
	return file_scalar_proto_rawDescGZIP(), []int{20}
}

func (x *ProofRetrievalRequest) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

type ProofRetrievalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Proof *AssetProof `protobuf:"bytes,1,opt,name=proof,proto3" json:"proof,omitempty"`
}

func (x *ProofRetrievalResponse) Reset() {
	*x = ProofRetrievalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scalar_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProofRetrievalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProofRetrievalResponse) ProtoMessage() {}

func (x *ProofRetrievalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_scalar_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProofRetrievalResponse.ProtoReflect.Descriptor instead.
func (*ProofRetrievalResponse) Descriptor() ([]byte, []int) {
	return file_scalar_proto_rawDescGZIP(), []int{21}
}

func (x *ProofRetrievalResponse) GetProof() *AssetProof {
	if x != nil {
		return x.Proof
	}
	return nil
}

type ReturnableRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Types that are assignable to Request:
	//	*ReturnableRequest_CertificateRegistrationRequest
	//	*ReturnableRequest_ContractRegistrationRequest
	//	*ReturnableRequest_FunctionRegistrationRequest
	//	*ReturnableRequest_ContractExecutionRequest
	Request   isReturnableRequest_Request `protobuf_oneof:"request"`
	Hostname  string                      `protobuf:"bytes,6,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Port      uint32                      `protobuf:"varint,7,opt,name=port,proto3" json:"port,omitempty"`
	Signature []byte                      `protobuf:"bytes,8,opt,name=signature,proto3" json:"signature,omitempty"` // TODO: to be deleted later
}

func (x *ReturnableRequest) Reset() {
	*x = ReturnableRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scalar_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReturnableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReturnableRequest) ProtoMessage() {}

func (x *ReturnableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_scalar_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReturnableRequest.ProtoReflect.Descriptor instead.
func (*ReturnableRequest) Descriptor() ([]byte, []int) {
	return file_scalar_proto_rawDescGZIP(), []int{22}
}

func (x *ReturnableRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (m *ReturnableRequest) GetRequest() isReturnableRequest_Request {
	if m != nil {
		return m.Request
	}
	return nil
}

func (x *ReturnableRequest) GetCertificateRegistrationRequest() *CertificateRegistrationRequest {
	if x, ok := x.GetRequest().(*ReturnableRequest_CertificateRegistrationRequest); ok {
		return x.CertificateRegistrationRequest
	}
	return nil
}

func (x *ReturnableRequest) GetContractRegistrationRequest() *ContractRegistrationRequest {
	if x, ok := x.GetRequest().(*ReturnableRequest_ContractRegistrationRequest); ok {
		return x.ContractRegistrationRequest
	}
	return nil
}

func (x *ReturnableRequest) GetFunctionRegistrationRequest() *FunctionRegistrationRequest {
	if x, ok := x.GetRequest().(*ReturnableRequest_FunctionRegistrationRequest); ok {
		return x.FunctionRegistrationRequest
	}
	return nil
}

func (x *ReturnableRequest) GetContractExecutionRequest() *ContractExecutionRequest {
	if x, ok := x.GetRequest().(*ReturnableRequest_ContractExecutionRequest); ok {
		return x.ContractExecutionRequest
	}
	return nil
}

func (x *ReturnableRequest) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *ReturnableRequest) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *ReturnableRequest) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type isReturnableRequest_Request interface {
	isReturnableRequest_Request()
}

type ReturnableRequest_CertificateRegistrationRequest struct {
	CertificateRegistrationRequest *CertificateRegistrationRequest `protobuf:"bytes,2,opt,name=certificate_registration_request,json=certificateRegistrationRequest,proto3,oneof"`
}

type ReturnableRequest_ContractRegistrationRequest struct {
	ContractRegistrationRequest *ContractRegistrationRequest `protobuf:"bytes,3,opt,name=contract_registration_request,json=contractRegistrationRequest,proto3,oneof"`
}

type ReturnableRequest_FunctionRegistrationRequest struct {
	FunctionRegistrationRequest *FunctionRegistrationRequest `protobuf:"bytes,4,opt,name=function_registration_request,json=functionRegistrationRequest,proto3,oneof"`
}

type ReturnableRequest_ContractExecutionRequest struct {
	ContractExecutionRequest *ContractExecutionRequest `protobuf:"bytes,5,opt,name=contract_execution_request,json=contractExecutionRequest,proto3,oneof"`
}

func (*ReturnableRequest_CertificateRegistrationRequest) isReturnableRequest_Request() {}

func (*ReturnableRequest_ContractRegistrationRequest) isReturnableRequest_Request() {}

func (*ReturnableRequest_FunctionRegistrationRequest) isReturnableRequest_Request() {}

func (*ReturnableRequest_ContractExecutionRequest) isReturnableRequest_Request() {}

type LedgersValidationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssetId      string `protobuf:"bytes,1,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"`
	CertHolderId string `protobuf:"bytes,2,opt,name=cert_holder_id,json=certHolderId,proto3" json:"cert_holder_id,omitempty"`
	CertVersion  uint32 `protobuf:"varint,3,opt,name=cert_version,json=certVersion,proto3" json:"cert_version,omitempty"`
	Signature    []byte `protobuf:"bytes,4,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *LedgersValidationRequest) Reset() {
	*x = LedgersValidationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scalar_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LedgersValidationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LedgersValidationRequest) ProtoMessage() {}

func (x *LedgersValidationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_scalar_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LedgersValidationRequest.ProtoReflect.Descriptor instead.
func (*LedgersValidationRequest) Descriptor() ([]byte, []int) {
	return file_scalar_proto_rawDescGZIP(), []int{23}
}

func (x *LedgersValidationRequest) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

func (x *LedgersValidationRequest) GetCertHolderId() string {
	if x != nil {
		return x.CertHolderId
	}
	return ""
}

func (x *LedgersValidationRequest) GetCertVersion() uint32 {
	if x != nil {
		return x.CertVersion
	}
	return 0
}

func (x *LedgersValidationRequest) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type IdentifiableResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Types that are assignable to Response:
	//	*IdentifiableResponse_ContractExecutionResponse
	Response   isIdentifiableResponse_Response `protobuf_oneof:"response"`
	StatusCode uint32                          `protobuf:"varint,3,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`
}

func (x *IdentifiableResponse) Reset() {
	*x = IdentifiableResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scalar_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdentifiableResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdentifiableResponse) ProtoMessage() {}

func (x *IdentifiableResponse) ProtoReflect() protoreflect.Message {
	mi := &file_scalar_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdentifiableResponse.ProtoReflect.Descriptor instead.
func (*IdentifiableResponse) Descriptor() ([]byte, []int) {
	return file_scalar_proto_rawDescGZIP(), []int{24}
}

func (x *IdentifiableResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (m *IdentifiableResponse) GetResponse() isIdentifiableResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *IdentifiableResponse) GetContractExecutionResponse() *ContractExecutionResponse {
	if x, ok := x.GetResponse().(*IdentifiableResponse_ContractExecutionResponse); ok {
		return x.ContractExecutionResponse
	}
	return nil
}

func (x *IdentifiableResponse) GetStatusCode() uint32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

type isIdentifiableResponse_Response interface {
	isIdentifiableResponse_Response()
}

type IdentifiableResponse_ContractExecutionResponse struct {
	ContractExecutionResponse *ContractExecutionResponse `protobuf:"bytes,2,opt,name=contract_execution_response,json=contractExecutionResponse,proto3,oneof"`
}

func (*IdentifiableResponse_ContractExecutionResponse) isIdentifiableResponse_Response() {}

type LedgersValidationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response []*AssetProofRetrievalResponse `protobuf:"bytes,1,rep,name=response,proto3" json:"response,omitempty"`
}

func (x *LedgersValidationResponse) Reset() {
	*x = LedgersValidationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scalar_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LedgersValidationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LedgersValidationResponse) ProtoMessage() {}

func (x *LedgersValidationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_scalar_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LedgersValidationResponse.ProtoReflect.Descriptor instead.
func (*LedgersValidationResponse) Descriptor() ([]byte, []int) {
	return file_scalar_proto_rawDescGZIP(), []int{25}
}

func (x *LedgersValidationResponse) GetResponse() []*AssetProofRetrievalResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

var File_scalar_proto protoreflect.FileDescriptor

var file_scalar_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03,
	0x72, 0x70, 0x63, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xa1, 0x01, 0x0a, 0x1e, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x65, 0x72, 0x74, 0x5f, 0x68, 0x6f, 0x6c, 0x64,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x65, 0x72,
	0x74, 0x48, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x65, 0x72,
	0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0b, 0x63, 0x65, 0x72, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08,
	0x63, 0x65, 0x72, 0x74, 0x5f, 0x70, 0x65, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x65, 0x72, 0x74, 0x50, 0x65, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x76, 0x69, 0x61, 0x5f, 0x70,
	0x72, 0x6f, 0x78, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x76, 0x69, 0x61, 0x50,
	0x72, 0x6f, 0x78, 0x79, 0x22, 0xbb, 0x01, 0x0a, 0x1b, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x75, 0x6e, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x12, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x69, 0x6e,
	0x61, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x66, 0x75, 0x6e, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x10, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x74,
	0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x76, 0x69, 0x61, 0x5f, 0x70, 0x72, 0x6f,
	0x78, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x76, 0x69, 0x61, 0x50, 0x72, 0x6f,
	0x78, 0x79, 0x22, 0xd3, 0x02, 0x0a, 0x1b, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f,
	0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x12, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x42, 0x69, 0x6e, 0x61, 0x72,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x10, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x42, 0x79, 0x74, 0x65, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x2f, 0x0a, 0x13, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f,
	0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x12, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x69, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x65, 0x72, 0x74, 0x5f, 0x68, 0x6f, 0x6c,
	0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x65,
	0x72, 0x74, 0x48, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x65,
	0x72, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0b, 0x63, 0x65, 0x72, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x76,
	0x69, 0x61, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x76, 0x69, 0x61, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x22, 0xa1, 0x01, 0x0a, 0x17, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x65, 0x72, 0x74, 0x5f, 0x68, 0x6f, 0x6c,
	0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x65,
	0x72, 0x74, 0x48, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x65,
	0x72, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0b, 0x63, 0x65, 0x72, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a,
	0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0xf3, 0x02, 0x0a,
	0x18, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x11, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41,
	0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x65, 0x72, 0x74, 0x5f,
	0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x63, 0x65, 0x72, 0x74, 0x48, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x63, 0x65, 0x72, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0b, 0x63, 0x65, 0x72, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x2b, 0x0a, 0x11, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x72, 0x67,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x66, 0x75, 0x6e,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x61,
	0x75, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x10, 0x61, 0x75, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x53,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x65, 0x5f,
	0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0c, 0x70, 0x72, 0x65, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a,
	0x0d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x09,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x4b, 0x65,
	0x79, 0x73, 0x22, 0xd1, 0x01, 0x0a, 0x17, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x41, 0x67, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x67,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x65, 0x6e, 0x64, 0x41, 0x67, 0x65, 0x12,
	0x24, 0x0a, 0x0e, 0x63, 0x65, 0x72, 0x74, 0x5f, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x65, 0x72, 0x74, 0x48, 0x6f, 0x6c,
	0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x65, 0x72, 0x74, 0x5f, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x63, 0x65, 0x72,
	0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0xb0, 0x01, 0x0a, 0x1a, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x61, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x61,
	0x67, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x65, 0x72, 0x74, 0x5f, 0x68, 0x6f, 0x6c, 0x64, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x65, 0x72, 0x74,
	0x48, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x65, 0x72, 0x74,
	0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b,
	0x63, 0x65, 0x72, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x94, 0x01, 0x0a, 0x15, 0x45, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x62, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x65, 0x72,
	0x74, 0x5f, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x63, 0x65, 0x72, 0x74, 0x48, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x21, 0x0a, 0x0c, 0x63, 0x65, 0x72, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x63, 0x65, 0x72, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x22, 0x3e, 0x0a, 0x15, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76,
	0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x22, 0x7e, 0x0a, 0x1a, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x37,
	0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x45, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x06, 0x70, 0x72, 0x6f, 0x6f, 0x66,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x73,
	0x73, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52, 0x06, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x73,
	0x22, 0x2e, 0x0a, 0x18, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x4c, 0x69, 0x73,
	0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6a, 0x73, 0x6f, 0x6e,
	0x22, 0x5c, 0x0a, 0x19, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x45, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x27, 0x0a, 0x06, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52, 0x06, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x73, 0x22, 0x62,
	0x0a, 0x18, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x25, 0x0a, 0x05, 0x70,
	0x72, 0x6f, 0x6f, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52, 0x05, 0x70, 0x72, 0x6f,
	0x6f, 0x66, 0x22, 0x65, 0x0a, 0x1b, 0x41, 0x73, 0x73, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6f, 0x66,
	0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x25, 0x0a, 0x05, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6f,
	0x66, 0x52, 0x05, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x65, 0x64, 0x67,
	0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c,
	0x65, 0x64, 0x67, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xb4, 0x01, 0x0a, 0x0a, 0x41, 0x73,
	0x73, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x03, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69,
	0x6e, 0x70, 0x75, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6e, 0x70, 0x75,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x72, 0x65, 0x76, 0x5f, 0x68, 0x61,
	0x73, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x70, 0x72, 0x65, 0x76, 0x48, 0x61,
	0x73, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x22, 0x45, 0x0a, 0x16, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x62, 0x6f,
	0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x45, 0x0a, 0x16, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2b, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x15, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x36,
	0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x39, 0x0a, 0x19, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x22, 0x44, 0x0a, 0x19, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x73, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27,
	0x0a, 0x06, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52,
	0x06, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x73, 0x22, 0x32, 0x0a, 0x15, 0x50, 0x72, 0x6f, 0x6f, 0x66,
	0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x19, 0x0a, 0x08, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x22, 0x3f, 0x0a, 0x16, 0x50,
	0x72, 0x6f, 0x6f, 0x66, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x61, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x05, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52, 0x05, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x22, 0x9c, 0x04, 0x0a,
	0x11, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x6f, 0x0a, 0x20, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x48, 0x00, 0x52, 0x1e, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x66, 0x0a, 0x1d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x1b,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x66, 0x0a, 0x1d, 0x66,
	0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x1b, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x5d, 0x0a, 0x1a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f,
	0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x18, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x6f,
	0x72, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x42, 0x09, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x9c, 0x01, 0x0a, 0x18,
	0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x65, 0x72, 0x74, 0x5f, 0x68, 0x6f, 0x6c, 0x64,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x65, 0x72,
	0x74, 0x48, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x65, 0x72,
	0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0b, 0x63, 0x65, 0x72, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0xb5, 0x01, 0x0a, 0x14, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x60, 0x0a, 0x1b, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f,
	0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x19, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x59, 0x0a, 0x19, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x73, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3c, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x50, 0x72, 0x6f,
	0x6f, 0x66, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2a, 0x94, 0x01,
	0x0a, 0x10, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x21, 0x0a, 0x1d, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x41, 0x43, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1f, 0x0a, 0x1b, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x41, 0x43,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x49,
	0x54, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x1d, 0x0a, 0x19, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x41,
	0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x41, 0x42, 0x4f, 0x52,
	0x54, 0x45, 0x44, 0x10, 0x02, 0x12, 0x1d, 0x0a, 0x19, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x41, 0x43,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f,
	0x57, 0x4e, 0x10, 0x03, 0x32, 0xf5, 0x03, 0x0a, 0x06, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x12,
	0x4e, 0x0a, 0x10, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x12, 0x20, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12,
	0x4e, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73,
	0x12, 0x1c, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73,
	0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x4c, 0x69,
	0x73, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x52, 0x0a, 0x0f, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x12, 0x1d, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1e, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x0e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x4c,
	0x65, 0x64, 0x67, 0x65, 0x72, 0x12, 0x1c, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x65, 0x64, 0x67,
	0x65, 0x72, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72,
	0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x12, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x12, 0x1f, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52, 0x65, 0x74, 0x72, 0x69,
	0x65, 0x76, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52, 0x65, 0x74, 0x72,
	0x69, 0x65, 0x76, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x4b, 0x0a, 0x0e, 0x41, 0x62, 0x6f, 0x72, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1a, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x41, 0x62, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x62, 0x6f,
	0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0xfd, 0x01, 0x0a,
	0x10, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x50, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65,
	0x64, 0x12, 0x4d, 0x0a, 0x0c, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x43, 0x65, 0x72,
	0x74, 0x12, 0x23, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00,
	0x12, 0x4e, 0x0a, 0x10, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x46, 0x75, 0x6e, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00,
	0x12, 0x4a, 0x0a, 0x0d, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x1a, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x74,
	0x72, 0x69, 0x65, 0x76, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76,
	0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0xa5, 0x03, 0x0a,
	0x07, 0x41, 0x75, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x12, 0x4e, 0x0a, 0x10, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x20, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x12, 0x1c, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x0e, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x11, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1f, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1e, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x0e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x4c,
	0x65, 0x64, 0x67, 0x65, 0x72, 0x12, 0x1c, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x65, 0x64, 0x67,
	0x65, 0x72, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72,
	0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x32, 0x62, 0x0a, 0x11, 0x41, 0x75, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x50,
	0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x64, 0x12, 0x4d, 0x0a, 0x0c, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x43, 0x65, 0x72, 0x74, 0x12, 0x23, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x32, 0xa7, 0x01, 0x0a, 0x0d, 0x50, 0x72, 0x6f,
	0x6f, 0x66, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x12, 0x4a, 0x0a, 0x0e, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x73, 0x12, 0x1e, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x73, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x0d, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65,
	0x76, 0x65, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x12, 0x1a, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x72,
	0x6f, 0x6f, 0x66, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52,
	0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x32, 0xe4, 0x03, 0x0a, 0x05, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x12, 0x4d, 0x0a, 0x0c,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x43, 0x65, 0x72, 0x74, 0x12, 0x23, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x10, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12,
	0x20, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x10, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x20, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x0f, 0x45,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x1d,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x45, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x45, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x52, 0x0a, 0x0f, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x64, 0x67, 0x65,
	0x72, 0x73, 0x12, 0x1d, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x73,
	0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1e, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x73, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x42, 0x29, 0x0a, 0x11, 0x63, 0x6f, 0x6d,
	0x2e, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x2e, 0x64, 0x6c, 0x2e, 0x72, 0x70, 0x63, 0x42, 0x0b,
	0x53, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x05, 0x2e,
	0x2f, 0x72, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_scalar_proto_rawDescOnce sync.Once
	file_scalar_proto_rawDescData = file_scalar_proto_rawDesc
)

func file_scalar_proto_rawDescGZIP() []byte {
	file_scalar_proto_rawDescOnce.Do(func() {
		file_scalar_proto_rawDescData = protoimpl.X.CompressGZIP(file_scalar_proto_rawDescData)
	})
	return file_scalar_proto_rawDescData
}

var file_scalar_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_scalar_proto_msgTypes = make([]protoimpl.MessageInfo, 26)
var file_scalar_proto_goTypes = []interface{}{
	(TransactionState)(0),                  // 0: rpc.TransactionState
	(*CertificateRegistrationRequest)(nil), // 1: rpc.CertificateRegistrationRequest
	(*FunctionRegistrationRequest)(nil),    // 2: rpc.FunctionRegistrationRequest
	(*ContractRegistrationRequest)(nil),    // 3: rpc.ContractRegistrationRequest
	(*ContractsListingRequest)(nil),        // 4: rpc.ContractsListingRequest
	(*ContractExecutionRequest)(nil),       // 5: rpc.ContractExecutionRequest
	(*LedgerValidationRequest)(nil),        // 6: rpc.LedgerValidationRequest
	(*AssetProofRetrievalRequest)(nil),     // 7: rpc.AssetProofRetrievalRequest
	(*ExecutionAbortRequest)(nil),          // 8: rpc.ExecutionAbortRequest
	(*StateRetrievalRequest)(nil),          // 9: rpc.StateRetrievalRequest
	(*ExecutionValidationRequest)(nil),     // 10: rpc.ExecutionValidationRequest
	(*ContractsListingResponse)(nil),       // 11: rpc.ContractsListingResponse
	(*ContractExecutionResponse)(nil),      // 12: rpc.ContractExecutionResponse
	(*LedgerValidationResponse)(nil),       // 13: rpc.LedgerValidationResponse
	(*AssetProofRetrievalResponse)(nil),    // 14: rpc.AssetProofRetrievalResponse
	(*AssetProof)(nil),                     // 15: rpc.AssetProof
	(*ExecutionAbortResponse)(nil),         // 16: rpc.ExecutionAbortResponse
	(*StateRetrievalResponse)(nil),         // 17: rpc.StateRetrievalResponse
	(*Status)(nil),                         // 18: rpc.Status
	(*ExecutionOrderingResponse)(nil),      // 19: rpc.ExecutionOrderingResponse
	(*ProofsRegistrationRequest)(nil),      // 20: rpc.ProofsRegistrationRequest
	(*ProofRetrievalRequest)(nil),          // 21: rpc.ProofRetrievalRequest
	(*ProofRetrievalResponse)(nil),         // 22: rpc.ProofRetrievalResponse
	(*ReturnableRequest)(nil),              // 23: rpc.ReturnableRequest
	(*LedgersValidationRequest)(nil),       // 24: rpc.LedgersValidationRequest
	(*IdentifiableResponse)(nil),           // 25: rpc.IdentifiableResponse
	(*LedgersValidationResponse)(nil),      // 26: rpc.LedgersValidationResponse
	(*emptypb.Empty)(nil),                  // 27: google.protobuf.Empty
}
var file_scalar_proto_depIdxs = []int32{
	5,  // 0: rpc.ExecutionValidationRequest.request:type_name -> rpc.ContractExecutionRequest
	15, // 1: rpc.ExecutionValidationRequest.proofs:type_name -> rpc.AssetProof
	15, // 2: rpc.ContractExecutionResponse.proofs:type_name -> rpc.AssetProof
	15, // 3: rpc.LedgerValidationResponse.proof:type_name -> rpc.AssetProof
	15, // 4: rpc.AssetProofRetrievalResponse.proof:type_name -> rpc.AssetProof
	0,  // 5: rpc.ExecutionAbortResponse.state:type_name -> rpc.TransactionState
	0,  // 6: rpc.StateRetrievalResponse.state:type_name -> rpc.TransactionState
	15, // 7: rpc.ProofsRegistrationRequest.proofs:type_name -> rpc.AssetProof
	15, // 8: rpc.ProofRetrievalResponse.proof:type_name -> rpc.AssetProof
	1,  // 9: rpc.ReturnableRequest.certificate_registration_request:type_name -> rpc.CertificateRegistrationRequest
	3,  // 10: rpc.ReturnableRequest.contract_registration_request:type_name -> rpc.ContractRegistrationRequest
	2,  // 11: rpc.ReturnableRequest.function_registration_request:type_name -> rpc.FunctionRegistrationRequest
	5,  // 12: rpc.ReturnableRequest.contract_execution_request:type_name -> rpc.ContractExecutionRequest
	12, // 13: rpc.IdentifiableResponse.contract_execution_response:type_name -> rpc.ContractExecutionResponse
	14, // 14: rpc.LedgersValidationResponse.response:type_name -> rpc.AssetProofRetrievalResponse
	3,  // 15: rpc.Ledger.RegisterContract:input_type -> rpc.ContractRegistrationRequest
	4,  // 16: rpc.Ledger.ListContracts:input_type -> rpc.ContractsListingRequest
	5,  // 17: rpc.Ledger.ExecuteContract:input_type -> rpc.ContractExecutionRequest
	6,  // 18: rpc.Ledger.ValidateLedger:input_type -> rpc.LedgerValidationRequest
	7,  // 19: rpc.Ledger.RetrieveAssetProof:input_type -> rpc.AssetProofRetrievalRequest
	8,  // 20: rpc.Ledger.AbortExecution:input_type -> rpc.ExecutionAbortRequest
	1,  // 21: rpc.LedgerPrivileged.RegisterCert:input_type -> rpc.CertificateRegistrationRequest
	2,  // 22: rpc.LedgerPrivileged.RegisterFunction:input_type -> rpc.FunctionRegistrationRequest
	9,  // 23: rpc.LedgerPrivileged.RetrieveState:input_type -> rpc.StateRetrievalRequest
	3,  // 24: rpc.Auditor.RegisterContract:input_type -> rpc.ContractRegistrationRequest
	4,  // 25: rpc.Auditor.ListContracts:input_type -> rpc.ContractsListingRequest
	5,  // 26: rpc.Auditor.OrderExecution:input_type -> rpc.ContractExecutionRequest
	10, // 27: rpc.Auditor.ValidateExecution:input_type -> rpc.ExecutionValidationRequest
	6,  // 28: rpc.Auditor.ValidateLedger:input_type -> rpc.LedgerValidationRequest
	1,  // 29: rpc.AuditorPrivileged.RegisterCert:input_type -> rpc.CertificateRegistrationRequest
	20, // 30: rpc.ProofRegistry.RegisterProofs:input_type -> rpc.ProofsRegistrationRequest
	21, // 31: rpc.ProofRegistry.RetrieveProof:input_type -> rpc.ProofRetrievalRequest
	1,  // 32: rpc.Proxy.RegisterCert:input_type -> rpc.CertificateRegistrationRequest
	3,  // 33: rpc.Proxy.RegisterContract:input_type -> rpc.ContractRegistrationRequest
	2,  // 34: rpc.Proxy.RegisterFunction:input_type -> rpc.FunctionRegistrationRequest
	5,  // 35: rpc.Proxy.ExecuteContract:input_type -> rpc.ContractExecutionRequest
	24, // 36: rpc.Proxy.ValidateLedgers:input_type -> rpc.LedgersValidationRequest
	25, // 37: rpc.Proxy.ProxyResponse:input_type -> rpc.IdentifiableResponse
	27, // 38: rpc.Ledger.RegisterContract:output_type -> google.protobuf.Empty
	11, // 39: rpc.Ledger.ListContracts:output_type -> rpc.ContractsListingResponse
	12, // 40: rpc.Ledger.ExecuteContract:output_type -> rpc.ContractExecutionResponse
	13, // 41: rpc.Ledger.ValidateLedger:output_type -> rpc.LedgerValidationResponse
	14, // 42: rpc.Ledger.RetrieveAssetProof:output_type -> rpc.AssetProofRetrievalResponse
	16, // 43: rpc.Ledger.AbortExecution:output_type -> rpc.ExecutionAbortResponse
	27, // 44: rpc.LedgerPrivileged.RegisterCert:output_type -> google.protobuf.Empty
	27, // 45: rpc.LedgerPrivileged.RegisterFunction:output_type -> google.protobuf.Empty
	17, // 46: rpc.LedgerPrivileged.RetrieveState:output_type -> rpc.StateRetrievalResponse
	27, // 47: rpc.Auditor.RegisterContract:output_type -> google.protobuf.Empty
	11, // 48: rpc.Auditor.ListContracts:output_type -> rpc.ContractsListingResponse
	19, // 49: rpc.Auditor.OrderExecution:output_type -> rpc.ExecutionOrderingResponse
	12, // 50: rpc.Auditor.ValidateExecution:output_type -> rpc.ContractExecutionResponse
	13, // 51: rpc.Auditor.ValidateLedger:output_type -> rpc.LedgerValidationResponse
	27, // 52: rpc.AuditorPrivileged.RegisterCert:output_type -> google.protobuf.Empty
	27, // 53: rpc.ProofRegistry.RegisterProofs:output_type -> google.protobuf.Empty
	22, // 54: rpc.ProofRegistry.RetrieveProof:output_type -> rpc.ProofRetrievalResponse
	27, // 55: rpc.Proxy.RegisterCert:output_type -> google.protobuf.Empty
	27, // 56: rpc.Proxy.RegisterContract:output_type -> google.protobuf.Empty
	27, // 57: rpc.Proxy.RegisterFunction:output_type -> google.protobuf.Empty
	12, // 58: rpc.Proxy.ExecuteContract:output_type -> rpc.ContractExecutionResponse
	26, // 59: rpc.Proxy.ValidateLedgers:output_type -> rpc.LedgersValidationResponse
	27, // 60: rpc.Proxy.ProxyResponse:output_type -> google.protobuf.Empty
	38, // [38:61] is the sub-list for method output_type
	15, // [15:38] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_scalar_proto_init() }
func file_scalar_proto_init() {
	if File_scalar_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_scalar_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CertificateRegistrationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scalar_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FunctionRegistrationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scalar_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContractRegistrationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scalar_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContractsListingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scalar_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContractExecutionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scalar_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LedgerValidationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scalar_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssetProofRetrievalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scalar_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecutionAbortRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scalar_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateRetrievalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scalar_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecutionValidationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scalar_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContractsListingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scalar_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContractExecutionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scalar_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LedgerValidationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scalar_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssetProofRetrievalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scalar_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssetProof); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scalar_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecutionAbortResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scalar_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateRetrievalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scalar_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Status); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scalar_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecutionOrderingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scalar_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProofsRegistrationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scalar_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProofRetrievalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scalar_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProofRetrievalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scalar_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReturnableRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scalar_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LedgersValidationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scalar_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IdentifiableResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scalar_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LedgersValidationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_scalar_proto_msgTypes[22].OneofWrappers = []interface{}{
		(*ReturnableRequest_CertificateRegistrationRequest)(nil),
		(*ReturnableRequest_ContractRegistrationRequest)(nil),
		(*ReturnableRequest_FunctionRegistrationRequest)(nil),
		(*ReturnableRequest_ContractExecutionRequest)(nil),
	}
	file_scalar_proto_msgTypes[24].OneofWrappers = []interface{}{
		(*IdentifiableResponse_ContractExecutionResponse)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_scalar_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   26,
			NumExtensions: 0,
			NumServices:   6,
		},
		GoTypes:           file_scalar_proto_goTypes,
		DependencyIndexes: file_scalar_proto_depIdxs,
		EnumInfos:         file_scalar_proto_enumTypes,
		MessageInfos:      file_scalar_proto_msgTypes,
	}.Build()
	File_scalar_proto = out.File
	file_scalar_proto_rawDesc = nil
	file_scalar_proto_goTypes = nil
	file_scalar_proto_depIdxs = nil
}
